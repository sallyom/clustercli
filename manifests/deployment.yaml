apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: openshift-cli-manager
  name: cli-manager 
  labels:
    app: cli-manager
    service: clustercli-fileserver
  annotations:
    config.openshift.io/inject-proxy: operator
    exclude.release.openshift.io/internal-openshift-hosted: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cli-manager
      service: clustercli-fileserver
  template:
    metadata:
      name: cli-manager
      labels:
        app: cli-manager
        service: clustercli-fileserver
    spec:
      serviceAccountName: cli-manager
      initContainers:
      - name: oc-artifacts
        image: quay.io/openshift/origin-cli-artifacts:latest
        command: ['sh', '-c', 'cp -R /usr/share/openshift/* /var/run/oc-artifacts/']
        volumeMounts:
        - mountPath: /var/run/oc-artifacts
          name: oc-artifacts
      - name: kn-artifacts
        image: quay.io/sallyom/kn:latest
        command: ['sh', '-c', 'cp -R /tmp/* /var/run/kn-artifacts/']
        volumeMounts:
        - mountPath: /var/run/kn-artifacts
          name: kn-artifacts
      - name: odo-artifacts
        image: quay.io/sallyom/odo:latest
        command: ['sh', '-c', 'cp -R /tmp/* /var/run/odo-artifacts/']
        volumeMounts:
        - mountPath: /var/run/odo-artifacts
          name: odo-artifacts
      containers:
      - name: climanager
        image: quay.io/sallyom/clustercli:latest
        imagePullPolicy: Always
        command: ["cli-manager"]
        args:
        - "cli-manager"
        resources:
          requests:
            memory: 50Mi
            cpu: 10m
        volumeMounts:
        - mountPath: /var/run/configmaps/config
          name: config
        - mountPath: /var/run/secrets/serving-cert
          name: serving-cert
        - mountPath: /var/run/configmaps/trusted-ca-bundle
          name: trusted-ca-bundle
          readOnly: true
        - mountPath: /var/run/configmaps/service-ca-bundle
          name: service-ca-bundle
          readOnly: true
      - name: clustercli-fileserver
        imagePullPolicy: IfNotPresent
        command: ["/usr/sbin/nginx", "-g", "daemon off;"]
        image: nginx:1.16
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources:
          requests:
            memory: 50Mi
            cpu: 10m
        volumeMounts:
        - mountPath: /var/run/configmaps/config
          name: config
        - mountPath: /var/run/secrets/serving-cert
          name: serving-cert
        - mountPath: /var/run/configmaps/trusted-ca-bundle
          name: trusted-ca-bundle
          readOnly: true
        - mountPath: /var/run/configmaps/service-ca-bundle
          name: service-ca-bundle
          readOnly: true
        - mountPath: /usr/share/nginx/html/oc
          name: oc-artifacts
        - mountPath: /usr/share/nginx/html/kn
          name: kn-artifacts
        - mountPath: /usr/share/nginx/html/odo
          name: odo-artifacts
        - mountPath: /usr/share/nginx/html
          name: index
        env:
        - name: IMAGE
          value: quay.io/sallyom/clustercli:new
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: oc-artifacts
        emptyDir: {}
      - name: kn-artifacts
        emptyDir: {}
      - name: odo-artifacts
        emptyDir: {}
      - name: config
        configMap:
          defaultMode: 440
          name: cli-manager-config
      - name: index
        configMap:
          name: index-html-config
          optional: true
      - name: trusted-ca-bundle
        configMap:
          name: trusted-ca-bundle
          optional: true
      - name: serving-cert
        secret:
          secretName: serving-cert
          optional: true
      - name: service-ca-bundle
        configMap:
          name: service-ca-bundle
          optional: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 120 
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 120 
